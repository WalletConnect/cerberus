
name: ci

on:
  release:
    types: ["published"]

  pull_request:
    paths-ignore:
#      - '.github/**'
      - 'docs/**'
      - 'README.md'

  push:
    branches: ['main']
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'README.md'

  workflow_dispatch:

concurrency:
  # Support push/pr as event types with different behaviors each:
  # 1. push: queue up builds
  # 2. pr: only allow one run per PR
  group: ${{ github.workflow }}-${{ github.event.type }}${{ github.event.pull_request.number }}
  # If there is already a workflow running for the same pull request, cancel it
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  RUST_BACKTRACE: full

jobs:
  checks:
    name: "Checks"
    strategy:
      fail-fast: false
      matrix:
        cargo:
          - name: "Clippy"
            cmd: clippy
            args: --all-features --tests -- -D warnings
          - name: "Check Formatting"
            cmd: fmt
            args: -- --check
            toolchain: nightly
            profile: default
          - name: "Unit Tests"
            cmd: test
            args: --all-features
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: "Git checkout"
        uses: actions/checkout@v3

      - name: "Install Rust (${{ matrix.cargo.toolchain }}/${{ matrix.cargo.profile }})"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.cargo.toolchain || 'stable' }}
          profile: ${{ matrix.cargo.profile || 'minimal' }}
          override: true

      - name: "Cache cargo registry"
        uses: Swatinem/rust-cache@v2
        continue-on-error: false

      - name: "Cargo ${{ matrix.cargo.name }}"
        uses: actions-rs/cargo@v1
        with:
          command: ${{ matrix.cargo.cmd }}
          args: ${{ matrix.cargo.args }}
